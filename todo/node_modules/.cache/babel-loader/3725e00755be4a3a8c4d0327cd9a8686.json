{"ast":null,"code":"var _jsxFileName = \"/Users/punchcode/Desktop/22-react-todo/todo/src/todo/TodoApp.js\";\nimport { createContext, useContext, useReducer, useState } from \"react\";\nimport StateProvider, { store } from \"./Provider\"; // const initialState = { todos: [], count: 0, banana: false }\n// const store = createContext(initialState)\n// const { Provider } = store\n// arr.reduce\n// [1,2,3].reduce((a, b) => a + b, 10) // 16\n\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoApp() {\n  return /*#__PURE__*/_jsxDEV(StateProvider, {\n    children: /*#__PURE__*/_jsxDEV(Todo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n} // Provider: provides the value (state)\n// action: object that describes what happened {type: 'ADD_TODO', payload: 'text'}\n// reducer: takes the state and action and reduces to a new state\n// store is a combination of reducers that hold state\n\n_c = TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"sources":["/Users/punchcode/Desktop/22-react-todo/todo/src/todo/TodoApp.js"],"names":["createContext","useContext","useReducer","useState","StateProvider","store","Todo","TodoApp"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,EAAgDC,QAAhD,QAAgE,OAAhE;AAEA,OAAOC,aAAP,IAAwBC,KAAxB,QAAqC,YAArC,C,CACA;AACA;AACA;AAEA;AACA;;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAED;AACA;AACA;AACA;;KAXwBA,O","sourcesContent":["import { createContext, useContext, useReducer, useState } from \"react\"\n\nimport StateProvider, { store } from \"./Provider\"\n// const initialState = { todos: [], count: 0, banana: false }\n// const store = createContext(initialState)\n// const { Provider } = store\n\n// arr.reduce\n// [1,2,3].reduce((a, b) => a + b, 10) // 16\n\nimport Todo from './Todo'\n\nexport default function TodoApp() {\n  return (\n    <StateProvider>\n      <Todo />\n    </StateProvider>\n  )\n}\n\n// Provider: provides the value (state)\n// action: object that describes what happened {type: 'ADD_TODO', payload: 'text'}\n// reducer: takes the state and action and reduces to a new state\n// store is a combination of reducers that hold state\n"]},"metadata":{},"sourceType":"module"}