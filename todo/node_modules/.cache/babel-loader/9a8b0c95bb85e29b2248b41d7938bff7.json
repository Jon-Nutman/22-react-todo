{"ast":null,"code":"var _jsxFileName = \"/Users/punchcode/Desktop/22-react-todo/todo/src/todo/TodoApp.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useReducer, useState } from \"react\";\nimport StateProvider from './Provider'; // const initialState = { todos: [], count: 0, banana: false }\n// const store = createContext(initialState)\n// const { Provider } = store\n// arr.reduce\n// [1,2,3].reduce((a, b) => a + b, 10) // 16\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Child() {\n  _s();\n\n  const globalState = useContext(store);\n  const [text, setText] = useState(\"\"); // console.log(globalState)\n\n  console.log(globalState.state);\n  const todos = globalState.state.todos;\n  const count = globalState.state.count;\n  const {\n    dispatch\n  } = globalState;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const action = {\n      type: \"ADD_TODO\",\n      payload: text\n    }; // console.log(action)\n\n    dispatch({\n      type: \"INCREMENT\"\n    });\n    dispatch({\n      type: \"ADD_TODO\",\n      payload: text\n    });\n    setText(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [count, text, /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Child, \"NmR404GkyfaO1Lbwup7nPAkn4ao=\");\n\n_c = Child;\nexport default function TodoApp() {\n  return /*#__PURE__*/_jsxDEV(StateProvider, {\n    children: /*#__PURE__*/_jsxDEV(Child, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n} // Provider: provides the value (state)\n// action: object that describes what happened {type: 'ADD_TODO', payload: 'text'}\n// reducer: takes the state and action and reduces to a new state\n// store is a combination of reducers that hold state\n\n_c2 = TodoApp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Child\");\n$RefreshReg$(_c2, \"TodoApp\");","map":{"version":3,"sources":["/Users/punchcode/Desktop/22-react-todo/todo/src/todo/TodoApp.js"],"names":["createContext","useContext","useReducer","useState","StateProvider","Child","globalState","store","text","setText","console","log","state","todos","count","dispatch","handleSubmit","e","preventDefault","action","type","payload","target","value","map","todo","TodoApp"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,EAAgDC,QAAhD,QAAgE,OAAhE;AAEA,OAAOC,aAAP,MAA0B,YAA1B,C,CACA;AACA;AACA;AAEA;AACA;;;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAMC,WAAW,GAAGL,UAAU,CAACM,KAAD,CAA9B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAFe,CAGf;;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAW,CAACM,KAAxB;AACA,QAAMC,KAAK,GAAGP,WAAW,CAACM,KAAZ,CAAkBC,KAAhC;AACA,QAAMC,KAAK,GAAGR,WAAW,CAACM,KAAZ,CAAkBE,KAAhC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeT,WAArB;;AACA,WAASU,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAG;AAAEC,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,OAAO,EAAEb;AAA7B,KAAf,CAFuB,CAGvB;;AACAO,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAL,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,OAAO,EAAEb;AAA7B,KAAD,CAAR;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AACD,sBACE;AAAA,eACGK,KADH,EAEGN,IAFH,eAGE;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,QAAQ,EAAEQ,YAA1B;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAER,IAFT;AAGE,QAAA,QAAQ,EAAGS,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACK,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAUE;AAAA,gBACGV,KAAK,CAACW,GAAN,CAAWC,IAAD,iBACT;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAlCQpB,K;;KAAAA,K;AAoCT,eAAe,SAASqB,OAAT,GAAmB;AAChC,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAED;AACA;AACA;AACA;;MAXwBA,O","sourcesContent":["import { createContext, useContext, useReducer, useState } from \"react\"\n\nimport StateProvider from './Provider'\n// const initialState = { todos: [], count: 0, banana: false }\n// const store = createContext(initialState)\n// const { Provider } = store\n\n// arr.reduce\n// [1,2,3].reduce((a, b) => a + b, 10) // 16\n\n\nfunction Child() {\n  const globalState = useContext(store)\n  const [text, setText] = useState(\"\")\n  // console.log(globalState)\n  console.log(globalState.state)\n  const todos = globalState.state.todos\n  const count = globalState.state.count\n  const { dispatch } = globalState\n  function handleSubmit(e) {\n    e.preventDefault()\n    const action = { type: \"ADD_TODO\", payload: text }\n    // console.log(action)\n    dispatch({ type: \"INCREMENT\" })\n    dispatch({ type: \"ADD_TODO\", payload: text })\n    setText(\"\")\n  }\n  return (\n    <div>\n      {count}\n      {text}\n      <form action=\"\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </form>\n      <ul>\n        {todos.map((todo) => (\n          <p>{todo}</p>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default function TodoApp() {\n  return (\n    <StateProvider>\n      <Child />\n    </StateProvider>\n  )\n}\n\n// Provider: provides the value (state)\n// action: object that describes what happened {type: 'ADD_TODO', payload: 'text'}\n// reducer: takes the state and action and reduces to a new state\n// store is a combination of reducers that hold state\n"]},"metadata":{},"sourceType":"module"}