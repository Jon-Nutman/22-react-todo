{"ast":null,"code":"var _jsxFileName = \"/Users/punchcode/Desktop/22-react-todo/todo/src/todo/Provider.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  todos: [[{\n    id: 1,\n    description: 'hello'\n  }, {\n    id: 2,\n    description: 'bye'\n  }]],\n  count: 0\n};\nexport const store = /*#__PURE__*/createContext(initialState);\nconst {\n  Provider\n} = store; // arr.reduce\n// [1,2,3].reduce((a, b) => a + b, 10) // 16\n\nconst id = () => Math.random().toString() + '-' + Math.random().toString();\n\nfunction todoReducer(state, action) {\n  console.log(state, action);\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return { ...state,\n        todos: [...state.todos, {\n          id: id(),\n          description: action.payload\n        }]\n      };\n\n    case 'INCREMENT':\n      return { ...state,\n        count: state.count + 5\n      };\n\n    case 'DECREMENT_COUNT':\n      return { ...state,\n        count: state.count - 1\n      };\n\n    case 'DELETE_TODO':\n      return { ...state,\n        to\n      };\n    //   case 'COMPLETE' :\n    //       return {}\n\n    default:\n      throw new Error();\n  }\n\n  ;\n}\n\nconst StateProvider = ({\n  children\n}) => {\n  _s();\n\n  // {type: 'ADD_TODO', payload: 'hello'}\n  const [state, dispatch] = useReducer(todoReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n\n_s(StateProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = StateProvider;\nexport default StateProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"sources":["/Users/punchcode/Desktop/22-react-todo/todo/src/todo/Provider.js"],"names":["createContext","useReducer","initialState","todos","id","description","count","store","Provider","Math","random","toString","todoReducer","state","action","console","log","type","payload","to","Error","StateProvider","children","dispatch"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,KAAK,EAAE,CAAC,CAAC;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,WAAW,EAAE;AAArB,GAAD,EAAgC;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,WAAW,EAAE;AAArB,GAAhC,CAAD,CAAR;AAAwEC,EAAAA,KAAK,EAAE;AAA/E,CAArB;AACA,OAAO,MAAMC,KAAK,gBAAGP,aAAa,CAACE,YAAD,CAA3B;AACP,MAAM;AAAEM,EAAAA;AAAF,IAAeD,KAArB,C,CAEA;AACA;;AACA,MAAMH,EAAE,GAAG,MAAMK,IAAI,CAACC,MAAL,GAAcC,QAAd,KAA2B,GAA3B,GAAiCF,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAlD;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAmC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,MAAnB;;AACA,UAAOA,MAAM,CAACG,IAAd;AACE,SAAK,UAAL;AACI,aAAO,EAAC,GAAGJ,KAAJ;AAAWV,QAAAA,KAAK,EAAE,CAAC,GAAGU,KAAK,CAACV,KAAV,EAAiB;AAACC,UAAAA,EAAE,EAAEA,EAAE,EAAP;AAAWC,UAAAA,WAAW,EAAES,MAAM,CAACI;AAA/B,SAAjB;AAAlB,OAAP;;AACJ,SAAK,WAAL;AACI,aAAO,EAAC,GAAGL,KAAJ;AAAWP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,GAAc;AAAhC,OAAP;;AACJ,SAAK,iBAAL;AACM,aAAO,EAAC,GAAGO,KAAJ;AAAWP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,GAAc;AAAhC,OAAP;;AACN,SAAK,aAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAWM,QAAAA;AAAX,OAAP;AACN;AACA;;AACE;AACE,YAAM,IAAIC,KAAJ,EAAN;AAZJ;;AAaC;AACJ;;AAID,MAAMC,aAAa,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAoB;AAAA;;AACE;AAC1C,QAAM,CAACT,KAAD,EAAQU,QAAR,IAAoBtB,UAAU,CAACW,WAAD,EAAcV,YAAd,CAApC;AACA,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAF;AAASU,MAAAA;AAAT,KAAjB;AAAA,cAAuCD;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJD;;GAAMD,a;;KAAAA,a;AAMN,eAAeA,aAAf","sourcesContent":["import { createContext, useReducer } from 'react'\n\nconst initialState = {todos: [[{id: 1, description: 'hello'}, {id: 2, description: 'bye'}]], count: 0};\nexport const store = createContext(initialState);\nconst { Provider } = store;\n\n// arr.reduce\n// [1,2,3].reduce((a, b) => a + b, 10) // 16\nconst id = () => Math.random().toString() + '-' + Math.random().toString()\n\nfunction todoReducer(state, action){\n    console.log(state, action);\n    switch(action.type) {\n      case 'ADD_TODO':\n          return {...state, todos: [...state.todos, {id: id(), description: action.payload}]}\n      case 'INCREMENT':\n          return {...state, count: state.count + 5}\n      case 'DECREMENT_COUNT':\n            return {...state, count: state.count - 1}  \n      case 'DELETE_TODO':\n          return {...state, to}    \n    //   case 'COMPLETE' :\n    //       return {}\n      default:\n        throw new Error();\n    };\n}\n\n\n\nconst StateProvider = ( { children } ) => {\n                                            // {type: 'ADD_TODO', payload: 'hello'}\n  const [state, dispatch] = useReducer(todoReducer, initialState);\n  return <Provider value={{ state, dispatch }}>{children}</Provider>\n}\n\nexport default StateProvider"]},"metadata":{},"sourceType":"module"}