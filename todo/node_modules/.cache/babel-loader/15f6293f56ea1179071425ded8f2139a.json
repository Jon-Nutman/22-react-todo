{"ast":null,"code":"var _jsxFileName = \"/Users/punchcode/Desktop/22-react-todo/todo/src/todo/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { store } from \"./Provider\";\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList(props) {\n  _s();\n\n  const globalState = useContext(store);\n  const {\n    dispatch\n  } = globalState;\n\n  function removeTodo(id) {\n    dispatch({\n      type: \"REMOVE_TODO\",\n      payload: id\n    });\n  }\n\n  function completeTask(id) {\n    dispatch({\n      type: \"CHECKED\",\n      payload: id\n    });\n  }\n\n  console.log(props.todos);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"todoList\",\n    children: props.todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: todo.isComplete ? \"listItemChecked\" : \"listItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.isComplete,\n          onClick: () => completeTask(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), \" \", todo.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"xButton\",\n        onClick: () => removeTodo(todo.id),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"amC1/c9ldnJBSldn3lb055gydI4=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/punchcode/Desktop/22-react-todo/todo/src/todo/TodoList.js"],"names":["store","useContext","TodoList","props","globalState","dispatch","removeTodo","id","type","payload","completeTask","console","log","todos","map","todo","isComplete","description"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAMC,WAAW,GAAGH,UAAU,CAACD,KAAD,CAA9B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAeD,WAArB;;AAEA,WAASE,UAAT,CAAoBC,EAApB,EAAwB;AACtBF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEF;AAAhC,KAAD,CAAR;AACD;;AAED,WAASG,YAAT,CAAsBH,EAAtB,EAA0B;AACxBF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAAEF;AAA5B,KAAD,CAAR;AACD;;AACDI,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACU,KAAlB;AACA,sBACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA,cACGV,KAAK,CAACU,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,iBACf;AAAkB,MAAA,SAAS,EAAEA,IAAI,CAACC,UAAL,GAAkB,iBAAlB,GAAsC,UAAnE;AAAA,8BACE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,OAAO,EAAED,IAAI,CAACC,UAFhB;AAGE,UAAA,OAAO,EAAE,MAAMN,YAAY,CAACK,IAAI,CAACR,EAAN;AAH7B;AAAA;AAAA;AAAA;AAAA,gBADF,EAKY,GALZ,EAMGQ,IAAI,CAACE,WANR;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAE,MAAMX,UAAU,CAACS,IAAI,CAACR,EAAN,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA,OAASQ,IAAI,CAACR,EAAd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA/BQL,Q;;KAAAA,Q;AAiCT,eAAeA,QAAf","sourcesContent":["import { store } from \"./Provider\"\nimport { useContext } from \"react\"\n\nfunction TodoList(props) {\n  const globalState = useContext(store)\n  const { dispatch } = globalState\n\n  function removeTodo(id) {\n    dispatch({ type: \"REMOVE_TODO\", payload: id })\n  }\n\n  function completeTask(id) {\n    dispatch({ type: \"CHECKED\", payload: id })\n  }\n  console.log(props.todos)\n  return (\n    <ul className=\"todoList\">\n      {props.todos.map((todo) => (\n        <li key={todo.id} className={todo.isComplete ? \"listItemChecked\" : \"listItem\"}>\n          <div>\n            <input\n              type=\"checkbox\"\n              checked={todo.isComplete}\n              onClick={() => completeTask(todo.id)}\n            ></input>{\" \"}\n            {todo.description}\n          </div>\n          <button className=\"xButton\" onClick={() => removeTodo(todo.id)}>\n            X\n          </button>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}