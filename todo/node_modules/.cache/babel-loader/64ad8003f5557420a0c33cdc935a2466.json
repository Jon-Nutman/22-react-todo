{"ast":null,"code":"var _jsxFileName = \"/Users/punchcode/Desktop/22-react-todo/todo/src/todo/Provider.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  todos: [],\n  trackingTodos: [],\n  count: 0\n};\nexport const store = /*#__PURE__*/createContext(initialState);\nconst {\n  Provider\n} = store; // arr.reduce\n// [1,2,3].reduce((a, b) => a + b, 10) // 16\n\nconst id = () => Math.random().toString() + \"-\" + Math.random().toString();\n\nfunction todoReducer(state, action) {\n  console.log(state, action);\n\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return { ...state,\n        todos: [...state.todos, {\n          id: id(),\n          description: action.payload\n        }],\n        trackingTodos: [...state.trackingTodos, {\n          id: id(),\n          description: action.payload\n        }],\n        count: state.count + 1\n      };\n\n    case \"REMOVE_TODO\":\n      const todoId = action.payload;\n      const newTodos = state.todos.filter(todo => todo.id !== todoId);\n      return { ...state,\n        todos: newTodos,\n        trackingTodos: newTodos,\n        count: state.count - 1\n      };\n\n    case \"CHECKED\":\n      const checked = state.todos.map(item => {\n        if (item.id === action.payload) {\n          const newObj = { ...item,\n            isComplete: !item.isComplete\n          };\n          return newObj;\n        }\n\n        return item;\n      });\n      return { ...state,\n        todos: checked,\n        trackingTodos: checked\n      };\n\n    case \"COMPLETED\":\n      const completedTodos = [...state.trackingTodos.filter(todo => todo.isComplete == true)];\n      return { ...state,\n        todos: completedTodos,\n        trackingTodos: completedTodos\n      };\n\n    case \"ALL\":\n      const allTodos = { ...state,\n        todos: [...state.todos]\n      };\n      return allTodos;\n\n    default:\n      throw new Error();\n  }\n}\n\nconst StateProvider = ({\n  children\n}) => {\n  _s();\n\n  // {type: 'ADD_TODO', payload: 'hello'}\n  const [state, dispatch] = useReducer(todoReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n\n_s(StateProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = StateProvider;\nexport default StateProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"sources":["/Users/punchcode/Desktop/22-react-todo/todo/src/todo/Provider.js"],"names":["createContext","useReducer","initialState","todos","trackingTodos","count","store","Provider","id","Math","random","toString","todoReducer","state","action","console","log","type","description","payload","todoId","newTodos","filter","todo","checked","map","item","newObj","isComplete","completedTodos","allTodos","Error","StateProvider","children","dispatch"],"mappings":"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","sourcesContent":["import { createContext, useReducer } from \"react\"\n\nconst initialState = { todos: [],trackingTodos: [], count: 0 }\nexport const store = createContext(initialState)\nconst { Provider } = store\n\n// arr.reduce\n// [1,2,3].reduce((a, b) => a + b, 10) // 16\nconst id = () => Math.random().toString() + \"-\" + Math.random().toString()\n\nfunction todoReducer(state, action) {\n  console.log(state, action)\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return {\n        ...state,\n        todos: [...state.todos, { id: id(), description: action.payload }],\n        trackingTodos: [...state.trackingTodos, { id: id(), description: action.payload }],\n        count: state.count + 1,\n      }\n    case \"REMOVE_TODO\":\n      const todoId = action.payload\n      const newTodos = state.todos.filter((todo) => todo.id !== todoId)\n      return { ...state, todos: newTodos, trackingTodos: newTodos, count: state.count - 1 }\n\n    case \"CHECKED\":\n      const checked = state.todos.map((item) => {\n        if (item.id === action.payload) {\n          const newObj = { ...item, isComplete: !item.isComplete }\n          return newObj\n        }\n        return item\n      })\n      return { ...state, todos: checked, trackingTodos: checked }\n    case \"COMPLETED\":\n      const completedTodos = [\n        ...state.trackingTodos.filter((todo) => todo.isComplete == true),\n      ]\n      return { ...state, todos: completedTodos, trackingTodos: completedTodos }\n    case \"ALL\":\n        const allTodos = {...state, todos:[...state.todos] }\nreturn allTodos\n\n\n    default:\n      throw new Error()\n  }\n}\n\nconst StateProvider = ({ children }) => {\n  // {type: 'ADD_TODO', payload: 'hello'}\n  const [state, dispatch] = useReducer(todoReducer, initialState)\n  return <Provider value={{ state, dispatch }}>{children}</Provider>\n}\n\nexport default StateProvider\n"]},"metadata":{},"sourceType":"module"}